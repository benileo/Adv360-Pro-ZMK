/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/* BI: Added */

&lt { quick-tap-ms = <200>; };

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        vscode_newterminal: vscode_newterminal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp GRAVE>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LCTRL>;

            label = "VSCODE_NEWTERMINAL";
        };

        slack_paste_snippet: slack_paste_snippet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LG(LS(ENTER))>, <&macro_release>;

            label = "SLACK_PASTE_SNIPPET";
        };

        vscode_commandpallete: vscode_commandpallete {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LG(LS(P))>, <&macro_release>;

            label = "VSCODE_COMMANDPALLETE";
        };

        intellij_collapse_all: intellij_collapse_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LS(LG(MINUS))>, <&macro_release>;

            label = "INTELLIJ_COLLAPSE_ALL";
        };

        intellij_last_edit: intellij_last_edit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LS(LG(BACKSPACE))>;

            label = "INTELLIJ_LAST_EDIT";
        };

        google_doc_heading: google_doc_heading {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LA(LC(NUMBER_2))>, <&macro_release>;

            label = "GOOGLE_DOC_HEADING";
        };

        intellij_rename: intellij_rename {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LS(F6)>, <&macro_release>;

            label = "INTELLIJ_RENAME";
        };

        vs_code_foldall: vs_code_foldall {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LG(K) &kp LG(N0)>;

            label = "VS_CODE_FOLDALL";
        };

        vscode_unfold: vscode_unfold {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp LG(RIGHT_BRACKET)>,
                <&macro_release>;

            label = "VSCODE_UNFOLD";
        };

        vscode_last_edit: vscode_last_edit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LG(K) &kp LG(Q)>;

            label = "VSCODE_LAST_EDIT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &tog 1                                                                            &mo 3          &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &kp LC(UP_ARROW)                                                                  &kp LG(TAB)    &kp Y   &kp U   &kp I      &kp O    &kp P     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &kp LC(LEFT)      &kp LGUI     &kp LALT               &kp RCTRL  &kp RGUI         &kp LC(RIGHT)  &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                                  &mt HOME LG(LEFT)      &kp PG_UP                                  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp Z
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC          &lt 4 ENTER  &mt END LG(RIGHT)      &kp PG_DN  &kp RIGHT_SHIFT  &lt 2 SPACE            &kp UP  &kp DOWN   &kp Z    &kp Z     &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2            &kp F3             &kp F4          &kp F5           &kp F6        &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp QUESTION  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &kp TILDE         &kp SLASH          &kp DELETE      &kp POUND        &kp AT        &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &kp UNDER         &kp KP_MINUS       &kp PLUS        &kp KP_EQUAL     &trans                        &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans            &trans             &trans          &trans                         &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        BI_MACRO {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans                &trans          &trans            &trans             &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &slack_paste_snippet  &trans          &trans            &trans             &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &google_doc_heading   &vscode_unfold  &vs_code_foldall  &vscode_last_edit  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &vscode_newterminal   &trans          &trans            &trans             &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans                        &trans          &trans            &trans             &trans  &trans
            >;
        };
    };
};
